@page "/game"
@page "/game/{id:int}"
@inject IGameService GameService

@if (Id == null)
{
    <PageTitle>Create a New Game</PageTitle>
    <h1>Create a New Game</h1>
}
else
{
    <PageTitle>Edit @game.Name</PageTitle>
    <h1>Edit @game.Name</h1>
}

<EditForm Model="game" OnSubmit="HandleSubmit">
    <div>
        <label for="gamename">Name</label>
        <InputText id="gamename" @bind-Value="game.Name" class="form-control"></InputText>
    </div>
    <div>
        <label for="gamedesc">Description</label>
        <InputText id="gamedesc" @bind-Value="game.Description" class="form-control"></InputText>
    </div>
    <div>
        <label for="gamepricegb">Price (GBP)</label>
        <InputNumber id="gamepricegb" @bind-Value="game.PriceGb" class="form-control"></InputNumber>
    </div>
    <div>
        <label>Developer</label>
        <InputSelect @bind-Value="game.DeveloperId" class="form-select">
            @foreach (var developer in GameService.Developers)
            {
                <option value="@developer.Id">@developer.Name</option>
            }
        </InputSelect>
    </div>
    <div>
        <label>Publisher</label>
        <InputSelect @bind-Value="game.PublisherId" class="form-select">
            @foreach (var publisher in GameService.Publishers)
            {
                <option value="@publisher.Id">@publisher.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteGame">Delete Game</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    Game game = new Game { Developer = new Developer(), Publisher = new Publisher() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Game" : "Update Game";
        await GameService.GetDevelopers();
        await GameService.GetPublishers();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            game.Developer = GameService.Developers[0];
            game.Publisher = GameService.Publishers[0];
        }
        else
        {
            game = await GameService.GetSingleGame((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if(Id == null)
        {
            await GameService.CreateGame(game);
        }
        else
        {
            await GameService.UpdateGame(game);
        }
    }

    async Task DeleteGame()
    {
        await GameService.DeleteGame(game.Id);
    }

}
